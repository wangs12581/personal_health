{"remainingRequest":"D:\\Desktop\\实战源码\\个人健康管理系统\\个人健康管理系统\\源码\\前端\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Desktop\\实战源码\\个人健康管理系统\\个人健康管理系统\\源码\\前端\\personal-heath-view\\src\\views\\user\\Message.vue?vue&type=style&index=0&id=5d22e93d&scoped=true&lang=scss&","dependencies":[{"path":"D:\\Desktop\\实战源码\\个人健康管理系统\\个人健康管理系统\\源码\\前端\\personal-heath-view\\src\\views\\user\\Message.vue","mtime":1736156850543},{"path":"D:\\Desktop\\实战源码\\个人健康管理系统\\个人健康管理系统\\源码\\前端\\personal-heath-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\实战源码\\个人健康管理系统\\个人健康管理系统\\源码\\前端\\personal-heath-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Desktop\\实战源码\\个人健康管理系统\\个人健康管理系统\\源码\\前端\\personal-heath-view\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Desktop\\实战源码\\个人健康管理系统\\个人健康管理系统\\源码\\前端\\personal-heath-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\实战源码\\个人健康管理系统\\个人健康管理系统\\源码\\前端\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\实战源码\\个人健康管理系统\\个人健康管理系统\\源码\\前端\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYmVsbC1pY29uIHsNCiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgaGVpZ2h0OiAzMHB4Ow0KICAgIHdpZHRoOiAzMHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDgyLCAxNTIsIDIzNyk7DQogICAgYm9yZGVyOiAzcHggc29saWQgcmdiKDIxMiwgMjI3LCAyMzApOw0KDQogICAgaSB7DQogICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4Ow0KICAgICAgICB3aWR0aDogMzBweDsNCiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICBmb250LXNpemU6IDI1cHg7DQogICAgICAgIGNvbG9yOiAjZjFmMWYxOw0KICAgIH0NCn0NCg0KLm1lc3NhZ2UtdGltZSB7DQogICAgZm9udC1zaXplOiAxMnB4Ow0KICAgIGNvbG9yOiByZ2IoMTMxLCAxMDQsIDEwMik7DQp9DQoNCi5jbGVhci1tZXNzYWdlIHsNCiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgbWFyZ2luLWxlZnQ6IDEwcHg7DQogICAgcGFkZGluZzogNnB4IDEycHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KfQ0KDQouY2xlYXItbWVzc2FnZTpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTsNCn0NCg0KLm5ld3MtdGFncyB7DQogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgIHBhZGRpbmc6IDJweCA1cHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMiwgMjQzLCAyNTEpOw0KICAgIGNvbG9yOiAjMWQzY2M0Ow0KICAgIGZvbnQtc2l6ZTogMTRweDsNCiAgICBib3JkZXItcmFkaXVzOiAzcHg7DQp9DQoNCi5tZXNzYWdlLXR5cGUgew0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICBmb250LXNpemU6IDE4cHg7DQogICAgbWFyZ2luLXJpZ2h0OiAyNXB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLm1lc3NhZ2UtY29udGVudCB7DQogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgIG1hcmdpbjogNXB4IDA7DQogICAgZm9udC1zaXplOiAyMnB4Ow0KfQ0K"},{"version":3,"sources":["Message.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmNA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Message.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n    <div>\r\n        <div style=\"line-height: 70px;padding: 0 50px;\">\r\n            <el-row>\r\n                <el-col :span=\"6\">\r\n                    <Logo sysName=\"健康有道\" />\r\n                </el-col>\r\n                <el-col :span=\"18\">\r\n                    <span style=\"float: right;display: flex; align-items: center; flex-wrap: wrap;\">\r\n                        <img style=\"width: 30px;height: 30px;border-radius: 15px;\" :src=\"userInfo.userAvatar\" />\r\n                        <span style=\"margin-left: 8px;\">{{ userInfo.userName }}</span>\r\n                    </span>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n        <div style=\"height: 20px;background-color: rgb(248, 248, 248);\"></div>\r\n        <div style=\"padding: 10px 50px;\">\r\n            <div>\r\n                <p style=\"font-size: 16px;padding: 10px 0;\">\r\n                    消息中心\r\n                    <span @click=\"clearMessage\" class=\"clear-message\">\r\n                        <i class=\"el-icon-s-open\"></i>\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <span @click=\"messageTypeSelected(messageType.type)\" class=\"message-type\"\r\n                    v-for=\"(messageType, index) in messageTypes\" :key=\"index\">\r\n                    {{ messageType.detail }}\r\n                </span>\r\n            </div>\r\n            <div style=\"padding: 30px 0;\">\r\n                <div v-if=\"messageList.length === 0\">\r\n                    <el-empty description=\"暂无消息\"></el-empty>\r\n                </div>\r\n                <div>\r\n                    <div style=\"margin-bottom: 5px;padding: 5px;border-radius: 5px;\"\r\n                        :style=\"{ backgroundColor: !message.isRead ? 'rgb(248,248,248)' : '' }\"\r\n                        v-for=\"(message, index) in messageList\" :key=\"index\">\r\n                        <el-row style=\"padding: 15px 0\">\r\n                            <el-col :span=\"1\">\r\n                                <span class=\"bell-icon\">\r\n                                    <span v-if=\"message.messageType === 1 || message.messageType === 2\">\r\n                                        <img style=\"width: 30px;height: 30px;border-radius: 20px;\"\r\n                                            :src=\"message.senderAvatar\" alt=\"\" srcset=\"\">\r\n                                    </span>\r\n                                    <i v-if=\"message.messageType === 3\" class=\"el-icon-data-analysis\"></i>\r\n                                </span>\r\n                            </el-col>\r\n                            <el-col :span=\"23\">\r\n                                <div>\r\n                                    <div v-if=\"message.messageType === 1 || message.messageType === 2\">\r\n                                        <div>\r\n                                            {{ message.senderName }}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"message-content\" v-if=\"message.messageType === 1\"\r\n                                            style=\"font-size: 14px;\">{{ commentDeal(message.content)[2] }}</span>\r\n                                        <span class=\"message-content\" v-else style=\"font-size: 14px;\">{{ message.content\r\n                                            }}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"message-time\">{{ message.createTime }}</span>\r\n                                    <span @click=\"replyUser(message)\"  v-if=\"message.messageType === 1\"\r\n                                        style=\"font-size: 10px;margin-left: 10px;cursor: pointer;\">回复</span>\r\n                                </div>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Logo from '@/components/Logo';\r\nimport Swal from 'sweetalert2';\r\nexport default {\r\n    components: { Logo },\r\n    data() {\r\n        return {\r\n            userInfo: {},\r\n            messageQueryDto: {},\r\n            messageList: [],\r\n            messageTypes: [],\r\n            dialogEvaluationsOperation: false,\r\n            message: {},\r\n        };\r\n    },\r\n    created() {\r\n        // 1. 拿到当前用户的信息\r\n        this.getUserInfo();\r\n        // 2. 加载用户全部消息\r\n        this.loadAllUsersMessage();\r\n        // 3. 加载全部的消息类型\r\n        this.loadAllMessageType();\r\n    },\r\n    methods: {\r\n        commentDeal(content) {\r\n            return content.split(';');\r\n        },\r\n        // 回复用户\r\n        replyUser(message) {\r\n            Swal.fire({\r\n                title: `回复【${message.senderName}】`,\r\n                input: 'text',\r\n                inputPlaceholder: '回复内容',\r\n                showCancelButton: true,\r\n                confirmButtonText: '提交',\r\n                cancelButtonText: '取消',\r\n                inputValidator: (value) => {\r\n                    if (!value) {\r\n                        return '内容不能为空哦';\r\n                    } else {\r\n                        this.saveCommentData(message.senderId, value, this.commentDeal(message.content));\r\n                    }\r\n                }\r\n            }).then((result) => {\r\n                console.log(\"...\");\r\n            });\r\n        },\r\n        // 保存回复数据\r\n        saveCommentData(senderId, content, ary) {\r\n            const comment = {\r\n                content,\r\n                parentId: ary[0],\r\n                contentType: 'NEWS',\r\n                contentId: ary[1],\r\n                replierId: senderId\r\n            }\r\n            this.$axios.post('/evaluations/insert', comment).then(response => {\r\n                const { data } = response;\r\n                if (data.code === 200) {\r\n                    this.$notify({\r\n                        title: '评论回复',\r\n                        message: '回复成功',\r\n                        type: 'success'\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                console.log(\"回复异常：\", error);\r\n            })\r\n        },\r\n        // 将全部的消息设置未已读\r\n        async clearMessage() {\r\n            const confirmed = await this.$swalConfirm({\r\n                title: '消息清除',\r\n                text: `是否将全部的消息设置为已读？`,\r\n                icon: 'warning',\r\n            });\r\n            if (confirmed) {\r\n                this.$axios.put('/message/clearMessage').then(response => {\r\n                    const { data } = response;\r\n                    if (data.code === 200) {\r\n                        this.loadAllUsersMessage();\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        evaluationsPut() {\r\n            this.$axios.put('/message/clearMessage').then(response => {\r\n                const { data } = response;\r\n                if (data.code === 200) {\r\n                    this.loadAllUsersMessage();\r\n                }\r\n            })\r\n        },\r\n        // 做回复的\r\n        replyEvalustions(message) {\r\n            this.message = message;\r\n            this.dialogEvaluationsOperation = true;\r\n        },\r\n        // 消息类型选中\r\n        messageTypeSelected(messageType) {\r\n            this.messageQueryDto.messageType = messageType;\r\n            // 如果是评论数据，需要额外处理\r\n            this.loadAllUsersMessage();\r\n        },\r\n        getUserInfo() {\r\n            const userInfo = sessionStorage.getItem('userInfo');\r\n            this.userInfo = JSON.parse(userInfo);\r\n        },\r\n        // 加载全部的消息类型\r\n        loadAllMessageType() {\r\n            this.$axios.get('/message/types').then(response => {\r\n                const { data } = response;\r\n                if (data.code === 200) {\r\n                    this.messageTypes = data.data;\r\n                    const messageType = { type: null, detail: '全部消息' };\r\n                    this.messageTypes.unshift(messageType);\r\n                    this.messageTypes.map(entity => entity.isCheck = false);\r\n                }\r\n            })\r\n        },\r\n        loadAllUsersMessage() {\r\n            const userInfo = sessionStorage.getItem('userInfo');\r\n            const entity = JSON.parse(userInfo);\r\n            this.messageQueryDto.userId = entity.id;\r\n            this.$axios.post('/message/query', this.messageQueryDto).then(response => {\r\n                const { data } = response;\r\n                if (data.code === 200) {\r\n                    this.messageList = data.data;\r\n                }\r\n            })\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.bell-icon {\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 30px;\r\n    border-radius: 20px;\r\n    background-color: rgb(82, 152, 237);\r\n    border: 3px solid rgb(212, 227, 230);\r\n\r\n    i {\r\n        line-height: 30px;\r\n        width: 30px;\r\n        text-align: center;\r\n        font-size: 25px;\r\n        color: #f1f1f1;\r\n    }\r\n}\r\n\r\n.message-time {\r\n    font-size: 12px;\r\n    color: rgb(131, 104, 102);\r\n}\r\n\r\n.clear-message {\r\n    display: inline-block;\r\n    margin-left: 10px;\r\n    padding: 6px 12px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.clear-message:hover {\r\n    background-color: #f1f1f1;\r\n}\r\n\r\n.news-tags {\r\n    display: inline-block;\r\n    padding: 2px 5px;\r\n    background-color: rgb(222, 243, 251);\r\n    color: #1d3cc4;\r\n    font-size: 14px;\r\n    border-radius: 3px;\r\n}\r\n\r\n.message-type {\r\n    display: inline-block;\r\n    font-size: 18px;\r\n    margin-right: 25px;\r\n    cursor: pointer;\r\n}\r\n\r\n.message-content {\r\n    display: inline-block;\r\n    margin: 5px 0;\r\n    font-size: 22px;\r\n}\r\n</style>"]}]}